Grade: 31.00/35.00

5 Deduction(s):

--------------
#1: 3.00 points
Failing test: test_followed_by_hillary_and_donald: 
        @points=3
        
Traceback (most recent call last):
  File "../assignments-sol/a0/a0_test.py", line 67, in test_followed_by_hillary_and_donald
    self.assertEqual(r, 'MagicJohnson')
AssertionError: "['MagicJohnson']" != 'MagicJohnson'
- ['MagicJohnson']
? --            --
+ MagicJohnson


source:
    def test_followed_by_hillary_and_donald(self):
         """
         @points=3
         """
         twitter = get_twitter()
         screen_names = ['DrJillStein', 'GovGaryJohnson', 'HillaryClinton', 'realDonaldTrump']
         users = sorted(get_users(twitter, screen_names), key=lambda x: x['screen_name'])
         add_all_friends(twitter, users)
         r = followed_by_hillary_and_donald(users, twitter)
         self.assertEqual(r, 'MagicJohnson')
--------------

--------------
#2: 6.00 points
Failing test: test_add_all_friends: 
        @points=6
        
Traceback (most recent call last):
  File "../assignments-sol/a0/a0_test.py", line 34, in test_add_all_friends
    self.assertListEqual(users[0]['friends'][:10], [695023, 1697081, 8381682, 10204352, 11669522, 13075702, 14968475, 14986849, 15166546, 16017475])
KeyError: 'friends'

source:
    def test_add_all_friends(self):
         """
         @points=6
         """
         twitter = get_twitter()
         users = [{'screen_name': 'aronwc'}]
         add_all_friends(twitter, users)
         self.assertListEqual(users[0]['friends'][:10], [695023, 1697081, 8381682, 10204352, 11669522, 13075702, 14968475, 14986849, 15166546, 16017475])
--------------

--------------
#3: 5.00 points
Failing test: test_count_friends: 
        @points=5
        
Traceback (most recent call last):
  File "../assignments-sol/a0/a0_test.py", line 41, in test_count_friends
    c = count_friends([{'friends': [1,2]}, {'friends': [2,3]}, {'friends': [2,3]}])
  File "students/smahade4/a0/a0.py", line 209, in count_friends
    c.update(u['friend'])
KeyError: 'friend'

source:
    def test_count_friends(self):
         """
         @points=5
         """
         c = count_friends([{'friends': [1,2]}, {'friends': [2,3]}, {'friends': [2,3]}])
         r = c.most_common()
         self.assertListEqual(r, [(2, 3), (3, 2), (1, 1)])
--------------

--------------
#4: 4.00 points
Failing test: test_create_graph: 
        @points=4
        
Traceback (most recent call last):
  File "../assignments-sol/a0/a0_test.py", line 78, in test_create_graph
    Counter({1: 2, 2: 3, 3: 2, 4:1})
  File "students/smahade4/a0/a0.py", line 305, in create_graph
    for friend in user['friend']:
KeyError: 'friend'

source:
    def test_create_graph(self):
         """
         @points=4
         """
         graph = create_graph(
             [{'screen_name': 'a', 'friends': [1, 2, 3]},
              {'screen_name': 'b', 'friends': [2, 3, 4]},
              {'screen_name': 'c', 'friends': [1, 2, 3]}],
             Counter({1: 2, 2: 3, 3: 2, 4:1})
             )
         n = len(graph.nodes())
         e = len(graph.edges())
         self.assertEqual(n, 6)
         self.assertEqual(e, 8)
--------------

--------------
#5: 6.00 points
Failing test: test_friend_overlap: 
        @points=6
        
Traceback (most recent call last):
  File "../assignments-sol/a0/a0_test.py", line 53, in test_friend_overlap
    {'screen_name': 'c', 'friends': [1, 2, 3]},
  File "students/smahade4/a0/a0.py", line 243, in friend_overlap
    for friend in users[index]['friend']:
KeyError: 'friend'

source:
    def test_friend_overlap(self):
         """
         @points=6
         """
         r = friend_overlap([
                 {'screen_name': 'a', 'friends': [1, 2, 3]},
                 {'screen_name': 'b', 'friends': [2, 3, 4]},
                 {'screen_name': 'c', 'friends': [1, 2, 3]},
                 ])
         self.assertListEqual(r, [('a', 'c', 3), ('a', 'b', 2), ('b', 'c', 2)])
--------------

